'number' + 3 + 3

//Через те, що 'number' має тип string, то в даному випадку спрацює конкатинація і все приведеться в string і буде виведено 'number33'.

null + 3
//null буде приведено до числового значення, а саме 0 і виконається стандартне додавання, виведеться 3, як результат.

5 && "qwerty"
//Оператор && має вивести перше значення false, яке знайде, а якщо такого нема, то виведе крайній операнд, а саме 5 && "qwerty".

+'40' + +'2' + "hillel";
/*Унарні плюси перетворять радки 40 і 2 в цифри і вони сумуються (послідовне додавання зліва на право) в 42,
з наступним додаванням "hillel" усе перетвориться в рядок і виведеться "42hillel".*/

'10' - 5 === 6;
//Виведеться помилка, бо строга рівність не відбудеться: '10' - 5 за результатом дасть 5, але 5 не дорівнює 6.

true + false
//Так як це математична дія, то значення true і false будуть приведені до свого числового відповідника 1 і 0, відповідне, сума їх додавання буде виведена в консоль і це 1.

'4px' - 3
//Математична дія не відбудеться, так як типи рядків різні і привести значення '4px' до числа не можливо, виводимо Nan.

'4' - 3
//'4' буде перетворено в число і відбудеться віднімання, виводимо 1, як результат.

'6' + 3 ** 0;
/*Спочатку відбудеться піднесення 3 в 0ву степінь (1), 
потім ми починаємо додавання, маючи рядок '6' + 1, отимаємо '61' на виході через конкатинацію.*/

12 / '6'
//Буде 2, приведення '6' до числа і виконання ділення.

'10' + (5 === 6);
//Перша дія в дужках, строга нерівність не виконається і в результаті false, але так як '10' це рядок і виконається конкатинація, тому виведемо '10false'.

null == ''
//Результатом цієї дії буде значення false, так як жоден з операндів не можливо привести до типу іншого і порівняти.

3 ** (9 / 3);
//Перша дія у дужках, буде 3, потім приведення в степінь і в результаті 27.

!!'false' == !!'true'
//!! приводить значення справа до типу boolean, так як обидва значення - рядки, то вони перетворяться в true і рівність виконається, виведемо true.

0 || '0' && 1

/*1) Оператор || має знайти і повернути нам перше булеве значення true, в нашому випадку це рядок '0'.
2) Оператор && має порівняти значення і вивести перше значення false або повернути крайній операнд, якщо усі значення true ('0' і 1 мають значення true ) , тому виведеться значення 1.*/


(+null == false) < 1;
/*1) Спочатку дія в дужках: +null приводиться до числового значення 0, а 0 при звичайному порівнянні теж саме, що і false, значення в дужках true, а одже при порівнянні перетворюється в 1.
2) 1 не менше, а дорівнює 1, тому кінцевий результат - false, бо нерівність не виконана.*/

false && true || true
//Тут спрацює перебір операторів, так перша дія обере перше false, але потім оператор || їх порівняє і усе одно обере перше true, яке знайде (те true, що крайнє у виразі).

false && (false || true);
//Перша дія в дужках, оператор || обере true, але потім оператор && усе одно виведе перше false, яке знайде (займає першу позицію у виразі).

(+null == false) < 1 ** 5;
/*1) Спочатку дія в дужках: +null приводиться до числового значення 0, а 0 при звичайному порівнянні теж саме, що і false, значення в дужках true, а одже при порівнянні перетворюється в 1.
2) Наступна дія - приведення в степінь, має вищий пріоритет над порівнянням (13 і 9 відповідно), 1 в будь якій степені - 1.
2) 1 не менше, а дорівнює 1, тому результат - false.*/
